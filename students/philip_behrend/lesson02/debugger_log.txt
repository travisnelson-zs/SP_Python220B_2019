For some values, the rental start date is before the rental end date, resulting in a negative number for 
total_days. This causes a ValueError exception and the program exits.

(base) C:\Users\bn630e>cd C:\Users\bn630e\workspaces\SP_Python220B_2019\students\philip_behrend\lesson02

(base) C:\Users\bn630e\workspaces\SP_Python220B_2019\students\philip_behrend\lesson02>python -m pdb charges_calc.py -i source.json -o out.json
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(3)<module>()
-> '''
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(4)<module>()
-> import argparse
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(5)<module>()
-> import json
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(6)<module>()
-> import datetime
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(7)<module>()
-> import math
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(8)<module>()
-> import logging
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(10)<module>()
-> log_format = "%(asctime)s %(filename)s:%(lineno)-4d %(levelname)s %(message)s"
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(11)<module>()
-> log_file = datetime.datetime.now().strftime("%Y-%m-%d")+'.log'
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(12)<module>()
-> logging.basicConfig(level=logging.DEBUG, format = log_format, filename = log_file)
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(14)<module>()
-> def parse_cmd_arguments():
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(22)<module>()
-> def load_rentals_file(filename):
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(30)<module>()
-> def calculate_additional_fields(data):
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(53)<module>()
-> def save_to_json(filename, data):
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(57)<module>()
-> if __name__ == "__main__":
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(58)<module>()
-> args = parse_cmd_arguments()
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(59)<module>()
-> data = load_rentals_file(args.input)
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(60)<module>()
-> data = calculate_additional_fields(data)
(Pdb) s
--Call--
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(30)calculate_additional_fields()
-> def calculate_additional_fields(data):
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(31)calculate_additional_fields()
-> for value in data.values():
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(32)calculate_additional_fields()
-> try:
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(33)calculate_additional_fields()
-> rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(34)calculate_additional_fields()
-> rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(35)calculate_additional_fields()
-> value['total_days'] = (rental_end - rental_start).days
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(36)calculate_additional_fields()
-> value['total_price'] = value['total_days'] * value['price_per_day']
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(37)calculate_additional_fields()
-> try:
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(38)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) p(value['total_price'])
-2542
(Pdb) n
ValueError: math domain error
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(38)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(39)calculate_additional_fields()
-> except ValueError:
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(40)calculate_additional_fields()
-> logging.error("Tried to divide by negative total price: {}".format(value['total_price']))
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(41)calculate_additional_fields()
-> continue
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(31)calculate_additional_fields()
-> for value in data.values():
(Pdb) n
> c:\users\bn630e\workspaces\sp_python220b_2019\students\philip_behrend\lesson02\charges_calc.py(32)calculate_additional_fields()
-> try:
(Pdb) c
The program exited via sys.exit(). Exit status: 0